(function (F) {
  var I = F.MutationObserver || F.WebKitMutationObserver;
  var Y;
  if (I) {
    var W = 0;
    var J = new I(H);
    var X = F.document.createTextNode("");
    J.observe(X, {
      characterData: true
    });
    Y = function () {
      X.data = W = ++W % 2;
    };
  } else if (!F.setImmediate && typeof F.MessageChannel !== "undefined") {
    var V = new F.MessageChannel();
    V.port1.onmessage = H;
    Y = function () {
      V.port2.postMessage(0);
    };
  } else if ("document" in F && "onreadystatechange" in F.document.createElement("script")) {
    Y = function () {
      var $ = F.document.createElement("script");
      $.onreadystatechange = function () {
        H();
        $.onreadystatechange = null;
        $.parentNode.removeChild($);
        $ = null;
      };
      F.document.documentElement.appendChild($);
    };
  } else {
    Y = function () {
      setTimeout(H, 0);
    };
  }
  var C;
  var K = [];
  function H() {
    C = true;
    var $;
    var L;
    var N = K.length;
    while (N) {
      L = K;
      K = [];
      $ = -1;
      while (++$ < N) {
        L[$]();
      }
      N = K.length;
    }
    C = false;
  }
  module.exports = z;
  function z($) {
    if (K.push($) === 1 && !C) {
      Y();
    }
  }
}).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});